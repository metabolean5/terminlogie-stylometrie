syntaxe, grammaires catégorielles abstraites, types dépendant, mouvements  explicites, extraction. Syntax, abstract categorial grammars, dependant product, overt movements, extraction.  La description de la syntaxe d'une langue naturelle et de la relation entre ce niveau syntaxique et  le niveau sémantique est traditionnellement opérée en Traitement Automatique des Langues par un formalisme grammatical. Les Grammaires Catégorielles Abstraites (ACG), proposées par de Groote (de Groote, 2001), se distinguent dans le paysage des formalismes existants par des propriétés héritées des grammaires catégorielles (sensibilité aux ressources) et des propriétés propres à leur architecture : elles s'appuient sur un langage abstrait, dont les termes correspondent à des structures de dérivation, et un langage objet dont les termes correspondent aux structures dérivées.  Les mouvements grammaticaux explicites désignent les déplacements qui ont lieu dans des  constructions comme les formes interrogatives ou les propositions relatives par rapport aux phrases correspondantes. L'extraction d'un composant de la phrase par ces constructions peut s'effectuer à distance arbitraire, et selon des contraintes précises de la langue qui sont bien étudiées et transcrites dans de nombreux formalismes grammaticaux. Le propos de cet article est de présenter une modélisation de ce phénomène pour les ACG.  Dans la partie suivante on introduira le formalisme des ACG ainsi que l'extension du système  de type avec le produit dépendant. Dans la partie 3 sera présenté le problème des mouvements explicites, à travers les contraintes à l'extraction dans les constructions relative en français, et les réponses apportées dans plusieurs formalismes voisins, et la partie 4 détaillera la solution proposée pour les ACG.  Avec une approche similaire aux Lambda Grammars (Muskens, 2007) ou aux Convergent  Grammars (Pollard, 2007) , (Pollard, 2008), chaque ACG introduit une fonction d'un espace de termes dits abstraits vers un espace de termes objets. Ces termes objets peuvent représenter différentes structures de données utilisées en traitement automatique des langues, comme des arbres ou des chaînes de caractère, et on choisit donc de les construire sur le -calcul linéaire. Intuitivement, une ACG consiste en deux signatures, appelées vocabulaire abstrait et vocabulaire objet, qui déclarent des types et des constantes typées dans le fragment implicatif de la logique linéaire, et d'un homomorphisme, appelé lexique, de la première vers la seconde. Une Grammaire Catégorielle Abstraite génère deux langages, un langage abstrait et un langage objet. Le langage abstrait est défini comme l'ensemble des -termes linéaires (chaque abstraction lie une unique variable) clos construits sur le vocabulaire abstrait qui sont du type spécifique S. Le langage objet est alors l'image du langage abstrait par le lexique. Cette architecture permet à l'aide de deux ACG partageant un même langage abstrait (correspondant au niveau tectogrammatique) de réaliser ces termes abstraits vers un langage décrivant leur sémantique et un langage décrivant leur forme de surface (correspondant au niveau phénogrammatique). Nous ne nous intéressons uniquement dans ce papier à la description de la syntaxe et donc à la relation entre tectogrammatique et phénogramatique. Donnons un exemple d'une telle ACG :  N, NP, S : type  (vocabulaire abstrait) homme , village , ami : N joyeux : N N un , le : N NP dormir : NP S aimer , rencontrer : NP NP S J ean , M arie , P aul : NP de : NP N N  string : type  (vocabulaire objet) homme, joyeux, un, ... : string  N, NP, S  string  (lexique) homme  homme joyeux  x.x + joyeux un  x.un + x dormir  x.x + dort aimer  x, y.y + aime + x J ean  Jean de  x, y.y + de + x  (on note par &#34;+&#34; l'opération de concaténation des chaînes de caractère)  On peut vérifier que le terme suivant appartient au langage abstrait  rencontrer  (un (de M arie ami ) ) J ean  Son image par le lexique fait donc partie du langage objet   rencontrer  (un (de M arie ami )) J ean   (x, y.y + rencontre + x) ((x.un + x) ((x, y.y + de + x) M arie ami)) Jean    Jean rencontre un ami de M arie  (-réduction)  A l'inverse, la possibilité de partir d'un terme de surface et de décider s'il appartient au langage  d'une ACG est un problème ouvert équivalent à la décidabilité du fragment exponentiel multiplicatif de la logique linéaire (Salvati, 2005). Cependant, si on se restreint à la classe des ACG du  second ordre, dans lesquelles les termes du langage abstrait sont de la forme q  ... q p où les q sont des types atomiques , ce problème de l'appartenance est décidable en temps polynomial.  L'architecture des ACG ne dépend pas de la logique sur laquelle elles reposent. Contrairement  aux autres constructions proposées par Philippe de Groote et Sarah Maarek (de Groote & Maarek, 2007)(implication non linéaire, produit cartésien, union disjointe et type unit) pour étendre le système de type, le produit dépendant ne correspond pas à une primitive de la logique linéaire. Il vient de la théorie intuitionniste des types de Martin-Löf (Martin-Löf, 1973) et a été utilisé dans le contexte de la logique linéaire par Cervesato et Pfenning (Cervesato & Pfenning, 2002). Le produit dépendant permet d'introduire des types qui dépendent de termes. Le formalisme ainsi étendu est Turing-complet, et le problème de l'appartenance est donc indécidable (de Groote et al., 2007). Il reste à étudier quels fragments utilisant le pouvoir d'expression ainsi gagné restent décidables. Cet exemple montre comment utiliser les types dépendants pour instancier un groupe nominal par son genre.  gender = {m, f } : type  (vocabulaire abstrait) NP, N : (gender) type S : type  village  : N m ville : N f un : (x : gender) N x NP x joyeux : (x : gender) N x N x dormir : (x : gender) NP x S  gender = {m, f } : type  (vocabulaire objet) string : type ville joyeux, joyeuse, un, une, ... : string  gender  gender  N, NP  x.string (lexique) S  string ville  ville village  village un  g. x. {m  un, f  une} g + x joyeux  g. x. x + {m  joyeux, f  joyeuse} g dormir  g. x. x + dort  On peut vérifier que le terme suivant appartient au langage abstrait.   dormir  f (un f (joyeux f ville ) )  On en déduit que son image par le lexique appartient au langage objet   dormir  f (un f (joyeux f ville ))   une ville joyeuse dort   Les mouvements grammaticaux explicites sont ceux visibles au niveau de surface du langage :  ce sont les extractions de constituants syntaxiques par des constructions comme les interrogatives en qu, les relatives, ou les semi-clivées en français. On s'interessera ici à la modélisation des contraintes d'extraction par les constructions relatives dans la langues française, ces contraintes étant très proches pour les autres mouvements explicites (Abeillé, 2002).  Dans les ACG le pronom relatif sujet qui serait représenté au niveau abstrait par le terme   qui  : (NP S) N N  Le premier argument correspond à la suite de la proposition relative : c'est une phrase à laquelle  il manque un sujet. Le second argument correspond au nom complété par cette proposition. L'image de cette constante par le lexique serait alors : S. n. n + qui + (S ). On peut par exemple vérifier que la phrase suivante appartient au langage objet de surface :  dormir  (le (qui (x.aimer M arie x) homme ))   l homme qui aime M arie dort   Il faut noter que le système de type, contrairement à la tradition des grammaires catégorielles,  n'opère aucun contrôle sur l'ordre des mots dans les ACG. Cet ordre des mots est géré par le lexique. On n'a donc pas ici de problème à générer des extractions non-périphériques (l'homme que Marie aime passionnement dort ) ou à distance arbitraire (l'homme que Jean dit que Pierre croit que Marie aime dort ). D'un autre côté, sans contrôle sur la construction de nos termes abstraits, on rencontre plusieurs phénomènes de surgénération. Le premier est lié à l'absence de contraintes sur le rôle du constituant grammatical extrait. Rien n'empêche en effet de reconnaître l'homme qui Marie aime dort de manière similaire à l'exemple initial. L'autre contrainte qui doit être prise en compte est l'existence d'îlots d'extraction à l'intérieur desquels l'extraction est impossible depuis l'extérieur. Les propositions relatives elle-mêmes sont un exemple d'îlot d'extraction, et en effet L'homme que ma soeur qui aime dort ne devrait pas être reconnu comme une phrase de la langue française. Pourtant le terme  le (que (x.dormir (ma (qui (y.aime x y) soeur))) homme)   fait bien partie de notre langage abstrait. Les propositions complétives ne sont, elles, des îlots  que pour l'extraction de sujet : l'homme qui Marie crois que vient est grammaticalement incorrect. Les phénomènes d'extraction ont été considérés sous de nombreux angles différents. Examinons rapidement les solutions adoptées dans quelques formalismes voisins aux ACG.  Les Tree Adjoining Grammars permettent de bien rendre compte du phénomène (Abeillé, 2002).  Le schéma de formation des arbres élémentaires à complément relativisé modifie les arbres à racine phrastique pour placer le complément en tête de phrase avec un trait <qu>. Ce complément pouvait se trouver à profondeur arbitraire dans l'arbre initial puisqu'il apparait sur le schéma sous un lien de dominance sous-spécifié. Dans le cas d'une proposition relative, l'arbre obtenu est dominé par un noeud de catégorie N qui domine un autre noeud de catégorie N décrivant l'antécédent. Dans tous les cas un noeud intermédiaire phrastique est ajouté : il permet avec l'opérateur d'adjonction d'ajouter un nombre arbitraire de constructions comme Marie croit que . L'extraction du sujet est traitée de manière similaire mais distincte.  Dans les grammaires d'interaction, chaque pronom relatif est décrit par un arbre dans lequel  le complément extrait apparait mais est morphologiquement vide. Cette trace du complément pourra donc être unifiée avec les autres arbres où le complément est décrit, mais elle n'apparaitra pas en surface. Afin de permettre une dépendance à distance arbitraire entre le pronom relatif et le complément extrait, la trace est surmontée d'une relation de dépendance sous-spécifiée. Cependant, pour bloquer la traversée d'îlots d'extraction, cette relation est contrôlée : elle ne peut franchir que des noeuds étiquetés S et de fonction objet ou nulle (contraintes satisfaites par que Marie aime par exemple). L'arbre décrivant le pronom relatif sujet se distingue par l'absence de trace : le pronom assure la fonction de sujet. (Perrier, 2007). Les grammaires catégorielles s'appuient traditionnellement sur le calcul de Lambek. Le connecteur implicatif est double : le / prend son argument directement à sa droite et le \ directement à sa gauche. L'ordre des mots est donc géré dans le système de type. Ce système est trop rigide pour les constructions relatives puisqu'il empêche les extractions non-périphériques : l'argument d'un pronom relatif est une phrase à laquelle il manque un constituant à sa droite ou à sa gauche seulement. Une possibilité est d'ajouter un constructeur  et sa règle d'introduction, AB étant le type d'un terme qui complété quelque part d'un terme de type B serait de type A. On peut alors donner au pronom qui le type N\N/(SNP). On retrouve à ce moment la même  surgénération que dans les ACG. La modélisation des îlots d'extraction peut se faire à l'aide de  constructeurs modaux rattachés à l'extracteur et à la trace qui doivent se combiner tandis que les îlots d'extraction jouent le rôle de portes verrouillées à ces constructeurs (Moortgat, 1996) , (Carpenter, 1997). C'est également l'approche présente dans les Lambda Grammars (Muskens, 2007). On verra que c'est de cette technique qu'on s'approchera le plus.  Dans les Convergent Grammars, les pronoms relatifs (et les autres constituants opérant des  mouvements explicites) sont affectés d'une catégorie spéciale G[A,B,C] indiquant que ce terme se combine avec un terme de catégorie A contenant une variable libre de type B et renvoie un terme de type C tout en liant cette trace. Cette catégorie spéciale permet de ne construire aucun terme par lambda-abstraction. Il suffit donc de vérifier que des variables libres ne sortent pas des îlots d'extraction.  Le système de type étendu va nous permettre de contrôler la construction des termes du langage  abstrait dans le respect des contraintes de la langue. Le premier terme dont doivent dépendre les types de nos constantes est un marqueur de cas, qui vérifiera le rôle des constituants extraits (comme on ne s'intéresse ici qu'à la signature abstraite on omettra d'indicer chaque nom de constantes par c).  cas = {nom, acc, gen, comp} : type  NP, N : (cas) type S : type Jean, Marie, Paul, Laurent : (c : cas) NP c chien, maison, homme : (c : cas) N c un, le : (c : cas) N c NP c aimer, rencontrer : NP acc NP nom S dormir : NP nom S qui : (c : cas) (NP nom S) NP c NP c  La phrase suivante n'appartient plus au langage : aimer contraint la variable x à prendre comme  argument le cas acc, et qui le cas nom. Le terme ne peut donc pas être typé.  dormir  (le nom (qui (x.aimer x acc M arie nom) homme nom))   l homme qui M arie aime dort   On introduit un autre marqueur, de type ext pour extraction. L'idée est que les pronoms relatifs  forcent les propositions relatives à étiqueter la variable trace de l'extraction par ce marqueur à 0. Ce marqueur est propagé aux niveaux syntaxiques supérieurs mais ne peut pas franchir les îlots d'extraction. Il reste alors au pronom relatif de contrôler que la proposition relative est bien étiquetée par 0. Une troisième valeur du marqueur permet d'indiquer qu'un îlot à l'extraction  de sujet a été franchit. Cette valeur intermédiaire sera donc également acceptée par tous les  pronoms sauf le qui extracteur de sujet.  ext = {0, 1, 2} : type  NP : (ext) (cas) type N : (ext) (cas) type S : (ext) type S* : (ext) type chien, maison, homme : (c : cas) N 2 c un, le, mon :(c : cas) N 2 c NP 2 c marcher, dormir :(y : ext) NP y nom S y aimer, rencontrer :(y , y : ext) NP y acc NP y nom S min (y y ) qui :(c : cas) (NP 0 nom S 0) N 2 c N 2 c que :(y : ext, c : cas) (NP 0 acc S y  1) N 2 c N 2 c que :(y : ext) S y S  max(y, 1) (je crois *que* l'idée est bonne) croire, dire :(y , y : ext) S  y NP y nom S min (y y )  On peut vérifier que ce terme n'est plus typé par la grammaire : (on omet d'écrire les termes du  produit dépendant pour une meilleure lecture)  L'homme que ma soeur qui aime dort  le (que (x.dormir (ma (qui (y.aime x y) soeur))) homme) En effet les deux variables qui jouent le rôle de traces x et y doivent porter le marqueur 0 (exigence du type des pronoms relatifs). Ce marqueur va être consommé par le qui, et le marqueur d'extraction qui arrivera au que ne pourrait être que 2, ce qui rend le terme intypable. A l'inverse le terme suivante reste toujours typable :  L'homme que ma soeur qui dort aime   le (que (x.   aime  x (ma (qui (y. dort y ) soeur)) ) homme))  Enfin, on vérifie que ce groupe nominal n'est plus typable :   Pierre qui je crois que vient  qui (x.croire (que (venir x)) )je) P ierre  Le marqueur 0 de la variable trace devient 1 en passant par le je crois que. Le terme résultant  n'a donc pas le bon type pour être argument de qui.  Pierre que je crois que Marie aime   a la même forme de dérivation de type, à la différence de que qui, lui, accepte ce type pour son  argument.  Ce contrôle s'étend aisément aux autres pronoms relatifs et aux autres îlots d'extraction, comme  les si ou les propositions infinitives. Les îlots lexicalisés, comme le verbe hurler ne posent pas plus de problèmes. De plus les autres phénomènes de mouvements explicites (interrogatives en qu, semi-clivées) peuvent utiliser le même marqueur et la même structure de contrôle. Notons enfin que l'on pourrait avoir démultiplié les entrées lexicales plutôt qu'utiliser les types dépendants, on est donc resté dans un fragment réversible des ACG.  Un atout des ACG est de proposer directement un contrôle sur les structures de dérivations, qui  constituent notre langage abstrait. Il est ainsi possible de modéliser des phénomènes linguistiques sans quitter le formalisme ni le lambda-calcul typé. Cette technique de modélisation des contraintes à l'extraction propose une illustration pratique des possibilités offertes par l'extension du système de type des ACG. D'autres phénomènes de déplacement peuvent être modélisés selon le même schéma. En particulier, les mouvements grammaticaux implicites, qui sont visibles au niveau de la réalisation sémantique, présentent des caractéristiques proches des mouvements présentés dans cet article, sur la nature des extractions (opérées dans ce cas par les prises de portée des quantificateurs) comme sur celle des îlots d'extraction (Ruys & Winter, 2008).  
