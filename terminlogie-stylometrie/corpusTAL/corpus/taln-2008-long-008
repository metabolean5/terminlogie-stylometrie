Les connecteurs discursifs ont on rôle important dans l'interprétation des discours (dialogiques ou pas), donc lorsqu'il s'agit de produire des énoncés, le choix des mots qui relient les énoncés (par exemple, en dialogue oral) s'avère essentiel pour assurer la compréhension des visées illocutoires des locuteurs. En linguistique computationnelle, le problème a été abordé surtout au niveau de l'interprétation des discours monologiques, tandis que pour le dialogue, les recherches se sont limitées en général à établir une correspondance quasiment biunivoque entre relations rhétoriques et connecteurs. Dans ce papier nous proposons un mécanisme pour guider la génération des connecteurs concessifs en dialogue, à la fois du point de vue discursif et sémantique ; chaque connecteur considéré sera contraint par un ensemble de conditions qui prennent en compte la cohérence du discours et la pertinence sémantique de chaque mot concerné. Les contraintes discursives, exprimées dans un formalisme dérivé de la SDRT (« Segmented Discourse Representation Theory ») seront plongées dans des contraintes sémantiques sur les connecteurs, proposées par l'école genevoise (Moeschler), pour enfin évaluer la cohérence du discours résultant de l'emploi de ces connecteurs. Cue words play an important part in discourse interpretation (whether dialogues are concerned or not), hence when utterances have to be produced, the choice of the words that connect these utterances (for example, in spoken dialogue) is essential for ensuring the comprehension of the illocutionary goals of the speakers. In computational linguistics, the issue has been mitigated particularly in the context of monologue discourse interpretation, whereas for dialogues, research is usually limited to establishing an almost one-to-one mapping between rhetorical relations and cue words. In this paper we propose a mechanism for guiding concessive connectors in dialogue, at the same time from a discourse and from a semantic point of view ; each considered connector will be constrained via a set of conditions that take into account discourse coherence and the semantic relevance of each word concerned. Discourse constraints, expressed in a formalism derived from SDRT ("Segmented Discourse Representation Theory") will be mapped to semantic constraints on the connectors ; these semantic constraints are proposed by the Geneve linguistics school (Moeschler). Finally, the coherence of the discourse resulted from the use of these connectors will be assessed. Dialogue homme-machine, cohérence discursive, connecteurs concessifs, sémantique, pragmatique. Human-computer dialogue, discourse coherence, concessive connectors, semantics, pragmatics.  Les connecteurs discursifs sont importants pour guider la compréhension des messages  que les locuteurs transmettent sous forme linguistique en dialoguant. Par conséquent, ils ont reçu relativement beaucoup d'attention dans les recherches en linguistique, surtout lorsque l'interprétation des énoncés est concernée (Ducrot, 1980), (Moeschler, 1989). En traitement automatique des langues, les connecteurs sont regardés en général de deux manières différentes, selon les buts assumés :  - en analyse morpho-syntaxique et sémantique, les connecteurs ont souvent on rôle modéré,  car, d'un côté ils subissent et imposent peu de contraintes aux niveaux morphologique et syntaxique (voir par exemple, en français, l'emploi du subjonctif du verbe, après bien que) et, d'un autre côté, ils n'apportent rien à la sémantique des énoncés, considérée de manière vériconditionnelle et / ou isolée (Jurafsky & Martin, 2000) ; - en interprétation / analyse du discours (qui remonte surtout à la prise en compte des aspects pragmatiques de la langue), les connecteurs ont une place importante, car leur présence guide le processus d'analyse (Mann & Thomson, 1986). En génération du langage naturel, les connecteurs sont en général considérés comme les manifestations superficielles (c'est-à-dire, au niveau de la réalisation de surface) des relations rhétoriques qui relient des énoncés distincts pour constituer des discours (Reiter & Dale, 2000) ; par exemple, le connecteur "mais" matérialise une relation de correction par rapport à ce qui avait été dit auparavant. De toutes façons, cette approche s'avère souvent insuffisante, car, comme l'a montré Moeschler (Moeschler, 1989), les conditions d'emploi de chaque connecteur impliquent souvent plusieurs énoncés, reliés de manières assez diverses.  De l'autre côté, au niveau computationnel, les propos de Moeschler doivent être développés  sous forme d'algorithmes, où les entrées et les sorties soient clairement précisées. A partir de ce constat, cet article propose une formalisation computationnelle du choix des connecteurs concessifs dans le cadre d'un module générique, conçu pour le contrôle pragmatique de la génération du langage en dialogue oral homme-machine (Popescu et al., 2007).  Au niveau théorique, la nouveauté de l'approche proposée dans cet article réside dans le fait  qu'à la différence de Moeschler, qui, étant donné le connecteur, déduisait le schéma sémanticopragmatique le plus pertinent et donc l'emploi du connecteur (causal ou argumentatif) (Moeschler, 1989), nous proposons de déduire le schéma sémantico-pragmatique le plus pertinent à partir de la structure rhétorique (SDRS - « Segmented Discourse Representation Structure ») du dialogue et, par conséquent, choisir le connecteur qui satisfasse le mieux ce schéma ; ainsi, la cohérence du discours est également prise en compte.  Du point de vue applicatif, une telle démarche est utile lorsqu'il s'agit, pour la machine, de  produire des répliques, à partir d'expressions figées à trous, ce qui est une approche courante en dialogue homme-machine finalisé par la tâche, étant données la facilité de l'implémentation et la vitesse d'exécution ; les expressions figées sont ensuite collées via les connecteurs calculés. On génère donc un phénomène de surface (les connecteurs discursifs concessifs) de manière motivée du point de vue pragmatique et sémantique.  Pour un état de l'art concis sur ce sujet, on peut retenir, d'un côté, les démarches convergentes  avec celles de Moeschler, qui concernent seulement l'interprétation des connecteurs du discours ou, d'un autre côté, l'interprétation des connecteurs surtout en termes de relations de discours, soit dans la direction fixée par Marcu (Marcu, 2000), soit selon l'approche de Lascarides en SDRT (Sporelander & Lascarides, 2006). En ce qui concerne le choix des connecteurs en génération, des travaux représentatifs ont été poursuivis par Marcu, qui reliait les connecteurs à des relations discursives seulement (Marcu, 2000) ; donc, selon la terminologie de Moeschler, seul le « cotexte » était pris en compte, en opposition avec le « contexte » sémanticopragmatique, qui légitime ou bloque la production d'un connecteur, surtout lorsque le dialogue oral est concerné. Ici, à partir de la structure rhétorique (cotexte), nous calculons un contexte sémantico-pragmatique, qu'on filtre ensuite à travers le cotexte du dialogue entier, et qui pilote le choix des connecteurs. La section suivante constitue le coeur de l'article et présente les sémantiques des connecteurs pragmatiques considérés, aussi que les détails formels et computationnels du mécanisme pilotant le choix des connecteurs en génération ; ce mécanisme sera ensuite évalué de manière qualitative via un exemple typique de dialogue. La troisième section conclut l'article et présente des pistes pour continuer cette recherche.  Les connecteurs discursifs marquant la concession ont été bien étudiés, surtout dans l'école  genevoise de linguistique (Moeschler, Roulet, Rubattel, etc.) (Moeschler, 1989) ; ces travaux ont abouti à des modélisations sémantiques formelles des connecteurs tels que mais, quand même, pourtant ou bien que. Dans ce paragraphe on donne un bref aperçu d'une telle modélisation, à partir de la présentation de (Moeschler, 1989).  Pour cela, on considère d'abord un ensemble de notations, utilisées tout au long de cet article :   Ainsi, (Moeschler, 1989) définit deux types de concession, causale et argumentative qui se  particularisent pour chacun des connecteurs considérés - mais, quand même, pourtant ou bien que . Par conséquent, (Moeschler, 1989) propose un ensemble de sémantiques pour ces quatre connecteurs, dont on ne retient, de toutes façons, que les aspects 'procéduraux', car le but assumé dans cet article est de proposer un cadre opérationnel pour la génération de ces connecteurs en dialogue homme-machine.  Ainsi, mais et quand même se définissent à travers un « carré argumentatif » (délimité par trois  énoncés, ,  et ), formalisable de manière concise comme ci-dessous :  D'un autre côté, les connecteurs pourtant et bien que se définissent à travers un « triangle  causal » (délimité par deux énoncés,  et ), formalisable ainsi :  Dans ce paragraphe nous avons présenté les sémantiques de quatre connecteurs concessifs,  mais , quand même, pourtant et bien que, formalisées dans une approche qui s'inspire des travaux de l'école genevoise (Moeschler, 1989). Pour une spécification algorithmique du processus de génération de ces connecteurs, à partir de leurs sémantiques, il y a au moins un point à améliorer dans les sémantiques présentées : on observe qu'au niveau formel il n'y a aucune différence entre les sémantiques de pourtant et bien que. Comment savoir alors quel connecteur produire, dans un contexte donné ? Pour l'interprétation, Moeschler précise seulement que bien que stipule une plus forte détermination causale entre ses arguments, par rapport à pourtant (Moeschler, 1989) ; donc, il faudra exprimer cette idée de manière formelle, en tant que règle ou contrainte supplémentaire agissant sur la sémantique de ce connecteur. L'idée fondamentale de cet article est de « calculer » le connecteur le plus approprié en génération dialogique, par rapport au contexte sémantico-pragmatique de la conversation. Ainsi, pour cela on part d'une représentation profonde du cotexte associé au dialogue, à laquelle on ajoutera des contraintes contextuelles. Nous supposons que le point de départ pour le calcul des connecteurs est une structure segmentée de discours (SDRS), calculé en préalable par un module de structuration rhétorique (Popescu et al. , 2007). Cette structure de discours est calculée dans le cadre d'une version adaptée de la SDRT, pour la génération en dialogue (Popescu et al., 2007). Pour qu'on puisse utiliser cette structure rhétorique dans le calcul des connecteurs, nous spécifions une grammaire pour la représenter, utilisant les informations fournies par le module de structuration rhétorique. Une telle grammaire suppose que les informations sur la SDRS consistent en (i) le nombre D des énoncés connectés par des relations rhétoriques, (ii) le nombre R des relations rhétoriques qui relient les énoncés, (iii) l'ensemble  d'étiquettes  des énoncés, (iv) l'ensemble P des étiquettes des relations rhétoriques , (v) les formes logiques K des énoncés dans la structure de discours, (vi) les sémantiques (exprimées dans une logique du premier ordre (Popescu et al., 2007))  des relations rhétoriques dans la structure de discours. Cette grammaire est présentée de manière détaillée en (Popescu, 2007). En ce qui concerne l'ensemble possible des relations rhétoriques qui relient des paires d'énoncés (ou de sous-structures de discours), nous avons considéré 17 relations (Popescu et al., 2007), du total de 35, précisées par la SDRT d'origine (Asher & Lascarides, 2003) : (i) relations dialogiques - Q-Elab (« Question Elaboration »), IQAP (« Indirect Question-Answer Pair »), P-Corr (« Plan Correction »), P-Elab (« Plan Elaboration »), Background (« Background Question »), Elab (« Elaboration Question »), Narration (« Narration Question »), QAP (« Question-Answer Pair »), ACK (« Acknowledgement ») et NEI (« Not Enough Information ») ; (ii) relations monologiques - Alternation, Background, Consequence, Elaboration, Narration , Contrast et Parallel. Les sémantiques de toutes ces relations rhétoriques sont simulées dans une logique du premier ordre, pour plus d'efficacité computationnelle dans le contexte des dialogues finalisés par la tâche (Popescu et al., 2007) ; cette simulation conserve les sémantiques informelles des relations, en tant que précisées dans la SDRT d'origine (Asher & Lascarides, 2003).  Pour relier cette structure rhétorique aux spécifications sémantiques des connecteurs concessifs  (présentées dans la section 2.1), on va transposer le carré argumentatif et le triangle causal qui situent les quatre connecteurs considérés, dans des contraintes de type rhétorique ; pour cela, on s'appuie sur les sémantiques des relations rhétoriques, en tant que précisées en (Popescu et al., 2007). Ainsi, nous proposons tout d'abord un ensemble de correspondances entre les relations sémantiques spécifiant les connecteurs et les relations rhétoriques ; ces correspondances, présentées dans le tableau 1 sont motivées également par les définitions de (Moeschler, 1989) et par les spécifications de (Asher & Lascarides, 2003).  S'appuyant sur ces correspondances, nous pourrons spécifier les sémantiques des connecteurs,  en termes des relations de discours (et des connecteurs logiques usuels). Cependant, une observation préalable s'impose : dans la section 2.1 il n'y avait pas de distinction sémantique formelle entre pourtant et bien que ; de toutes façons, l'idée d'une plus forte détermination causale agen cée par bien que peut être formalisée via une contrainte supplémentaire sur ce connecteur : que  le temps de l'action décrite par l'énoncé qui succède ce connecteur précède le temps de l'action décrite par le deuxième énoncé sous l'incidence de ce connecteur . Au niveau logique cela sera exprimé via la fonction () qui précise (retourne) le temps de l'action décrite par l'énoncé libellé  ; cette fonction est codée dans une ontologie de discours (Popescu et al., 2007). Ainsi, les sémantiques des connecteurs concessifs considérés se formalisent, en termes rhétoriques, comme ci-dessous :  Dans ces sémantiques, les énoncés non reliés par les connecteurs, mais intervenant dans les  contraintes sur ces derniers ( ou , selon le cas) sont tirés soit du cotexte, soit du contexte :  - si l'énoncé en question est présent dans le discours, dans des tours de parole antérieurs, on  s'appuie sur lui ; - sinon, on déduit cet énoncé à partir des énoncés antérieurs et de l'ontologie de tâche (Caelen & Xuereb, 2007) (le contexte), via un processus inférentiel.  Une dernière remarque à l'égard des sémantiques des connecteurs concessifs (et du lien entre  celles-ci et la structure rhétorique) concerne la relation « < /2 », de force argumentative, non formalisée par Moeschler ou dans les sections antérieures de cet article. Pour cela, on s'appuie de manière explicite sur le contexte du dialogue, posant qu'on peut avoir deux interlocuteurs, l'émetteur d'un énoncé courant, désigné comme ci-dessus, par la fonction emitter/1 et l'alocutaire, désigné par ¬emitter/1 ; par conséquent, il n'y a pas d'équivalence entre des expressions du type (¬emitter(), ) et ¬  (emitter(), ), où «  » désigne un prédicat binaire quelconque et «  », un terme quelconque. Ceci étant, nous posons comme hypothèse de travail qu'un énoncé dont le contenu fait une référence explicite à son émetteur a une force argumentative plus élevée par rapport à un énoncé qui ne le fait pas, ou qu'un énoncé qui fait une référence explicite à l'alocutaire (donc, au destinataire) a une force argumentative plus élevée par rapport à un énoncé dont le contenu ne fait référence ni à cet alocutaire, ni à l'émetteur. Précisant que deux énoncés dont la force argumentative est à comparer ont le même émetteur, ces consignes peuvent s'exprimer sous forme logique ainsi : . Le cadre posé dans le paragraphe précedent pour l'expression sémantique, amendée par la structure rhétorique, des connecteurs concessifs en dialogue sera mis en valeur via une procédure conçue pour générer les connecteurs appropriés, lorsqu'il s'agit, pour la machine, de produire un énoncé dialogique.  Les entrées dans cette procedure consistent en (i) la structure rhétorique du dialogue « courant »  (c'est-à-dire, intégrant aussi la sémantique de la réplique censée être générée par la machine et donc, éventuellement, contenir un ou plusieurs connecteurs concessifs), (ii) les sémantiques des connecteurs (spécifiées sous forme de règles), (iii) l'ontologie de discours (spécifiée sous forme d'arbre hiérarchique (Popescu et al., 2007)) et (iv) l'ontologie de tâche pour les dialogues (spécifiée, à l'instar de l'ontologie de discours, sous forme de hiérarchie de concepts (Caelen & Xuereb, 2007)).  La sortie de cette procedure consiste en un ensemble de connecteurs qui peuvent relier les  énoncés dans la réplique courante de la machine ; cette liste peut éventuellement être vide, mais dans le cas contraire, chaque entrée dans cette liste a trois éléments : (i) le connecteur choisi, (ii) son « argument gauche » et (iii), son argument droit ; donc une entrée type est de la forme : (,  ,  ), ce qui correspondra à une forme de surface du type    , où  est le connecteur et  et  , les libellés de deux énoncés. Donc, la procédure est spécifiée ci-dessous : Le noyau de l'algorithme consiste dans la procédure apparier/3, qui prend en entrée la sémantique d'un connecteur, (l'étiquette d') un énoncé qui constituera l'argument droit du connecteur et une structure formée de deux ensembles : un ensemble de relations rhétoriques (censées avoir _ en tant qu'argument droit) et, respectivement, un ensemble d'énoncés (censés être les arguments gauches des relations rhétoriques). La sortie de la procédure apparier est constituée d'une structure qui contient la sémantique d'un connecteur, son argument gauche et, respectivement, son argument droit (qui est censé être justement l'énoncé _ lu en entrée) :  Nous démontrons l'opération des algorithmes proposés en §2.3 sur un fragment de dialogue  typique entre le système et un client, où la machine est une bibliothécaire virtuelle. Ainsi, désignant par U le client (l'usager), par M , la machine, et par l'indice supérieur  , l'étiquette du j-ème énoncé dans le i-ème tour de parole, le dialogue est montré ci-dessous (les connecteurs ont été mis en italiques) : Les énoncés de M sont disponibles sous forme logique, en tant que fournis par le contrôleur de dialogue (Caelen & Xuereb, 2007), (Popescu et al., 2007), tandis que ceux de U , sous forme linguistique ; à partir de ces derniers, l'analyseur sémantique calcule, pour ces énoncés, les formes logiques correspondantes, auxquelles l'interpréteur pragmatique attache les informations concernant le type d'acte de langage véhiculé par chaque contribution dialogique de  l'usager (Caelen & Xuereb, 2007). A partir de ces informations, le composant de structuration  rhétorique dans le module de génération calcule la SDRS qui intègre les formes logiques des énoncés censés être réalisés sous forme linguistique par M (Popescu et al., 2007). Ainsi, pour le fragment de dialogue considéré, la SDRS calculée est exprimée, sous forme synthétique, ci-dessous : .  Les relations de discours ont été calculées entre des paires d'énoncés et même entre des paires  dont un élément est un énoncé sous forme niée ; cela est utile pour faire la correspondance entre des fragments de cette SDRS et les sémantiques des connecteurs. Ainsi, pour la première réplique de la machine, entre les énoncés  et  la procédure apparier retourne les éléments (mais,  ,  ) et (quand même,  ,  ), puisque, pour mais on retrouve les contraintes Consequence ( , ¬ )  Contrast( , ¬ )  equals((K( )), TRUE)  equals((K(¬ )), FALSE) et l'énoncé « manquant »  est retrouvé en tant que 'vous ne pouvez pas emprunter ce livre' qui est déduit par modus ponens (Gallier, 1986) à partir de  et du fait (connu par le système à travers son ontologie de tâche) que U a déjà emprunté trois livres qu'il n'a pas encore rendus ; pour quand même est déduit via les mêmes contraintes que ci-dessus, auxquelles s'ajoute la contrainte Background( , ¬ ), déduite par modus ponens du fait que U a déjà emprunté trois livres et que, par défaut, selon le règlement, la bibliothèque ne prête pas plus de trois livres à la fois. Dans ce contexte, on a trois choix : (i) supprimer mais, (ii) supprimer quand même, (iii) garder les deux connecteurs ; selon l'algorithme dans §2.3 nous devrions adopter un des choix (ii) ou (iii). Du fait que (iii) ne mène à aucune contradiction logique, nous l'adoptons, car ainsi nous augmentons la pertinence illocutoire de la contribution langagière de M . De toutes façons, pour pouvoir garder mais on doit vérifier la satisfaction de < ( , ), ce qui est vrai puisque  exprime une vérité générale - 'on peut emprunter au plus trois livres à la fois', tandis que  exprime un fait relié à U , donc : ClassOf(¬emitter(), K()).  La deuxième contribution de la machine est traitée de manière similaire : entre les énoncés   et  la procédure apparier retourne (bien que,  ,  ) et (pourtant,  ,  ), puisqu'on retrouve la contrainte   ¬ , déduite de la relation Consequence( , ¬ ) et du fait, présent dans l'ontologie de tâche, que si un client avait perdu un document, la bibliothèque serait devenue plus stricte avec celui-ci, ce qui n'est pas compatible avec la concession de prêter plus de documents que le règlement prévoit, à cet usager (quatre livres, au lieu de trois) ; toutefois, on en retient seulement bien que, car, selon l'algorithme dans §3.2, ce connecteur est défini par plus de contraintes : à partir de K( ) et de K( ) (les sémantiques des énoncés  et  ) on déduit smaller(t( ), t( ) ). Par contre, pour les énoncés  et  , la procédure apparier, opérant à l'instar du cas précédent, ne retourne quand même que pourtant, car, du fait que le temps de ces deux énoncés est le même (le présent), on a que equals(t( ), t( ) ), donc les contraintes pour bien que ne sont pas satisfaites.  Dans cet article nous avons proposé un cadre pour contrôler la génération des connecteurs  concessifs afin de mieux structurer les répliques de la machine en dialogue avec les utilisateurs. Le mécanisme proposé pour générer mais, quand même, pourtant et bien que s'articule d'une part autour d'une description sémantique de ces connecteurs, dérivée de celle proposée  par (Moeschler, 1989) et, d'une autre part, autour d'un ensemble de spécifications pragmatiques  dans une procédure computationnelle. Ainsi, l'efficacité de ce cadre a été démontrée sur un fragment typique de dialogue homme-machine autour d'une application particulière - la réservation de documents dans une bibliothèque. Toutefois, les démarches proposées sont génériques, voire indépendantes du domaine d'application et paramétrables par rapport à celui-ci. Cette recherche devrait être continuée à plusieurs niveaux : (i) l'ensemble des connecteurs devrait être étendu à d'autres, comme parce que, puisque, car, d'ailleurs, etc. ; (ii) le mécanisme devrait être étendu au cas du dialogue à plusieurs locuteurs, ce qui reviendrait dans un premier temps à la modification de la sémantique de la relation de force argumentative < : les interlocuteurs de la machine ne sont plus réduits à ¬emitter() ; du fait que plusieurs interlocuteurs interviennent, on peut avoir un ensemble plus large de situations concernant la force argumentative : par exemple un énoncé dont l'action implique un locuteur plus haut du point de vue hiérarchique ou plus actif en conversation peut être plus pertinent du point de vue argumentatif qu'un autre énoncé impliquant son émetteur... ; (iii) une fois réalisées les extensions au dialogue à plusieurs, ce mécanisme devra être évalué de manière statistique sur des dialogues réels.  
