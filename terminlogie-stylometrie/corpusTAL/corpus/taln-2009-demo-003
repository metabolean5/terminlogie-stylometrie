L'alignement sous-phrastique consiste à extraire des traductions d'unités textuelles de grain  inférieur à la phrase à partir de textes multilingues dont les phrases ont préalablement été mises en correspondance. Le plus connu des outils disponibles est sans conteste GIZA++ (Och & Ney, 2003). Il implémente les modèles probabilistes I . Bien que produisant des résultats d'une grande qualité, beaucoup de ses utilisateurs sont loin d'en saisir toutes les subtilités, car de tels modèles sont d'une grande complexité. Cette complexité se répercute sur l'interface d'utilisation de l'outil. Pour répondre à toutes ces difficultés, nous mettons à disposition de tous un aligneur sousphrastique qui se distingue de GIZA++ selon plusieurs points. Il est : réellement multilingue : il permet d'aligner un nombre quelconque de langues simultanément. Contrairement aux modèles d'alignement traditionnels, la méthode sous-jacente n'est pas nécessairement bilingue. Elle repose sur un traitement alingue, ce qui la rend en pratique multilingue ; simple d'utilisation : une unique commande suffit dans la plupart des cas. Il n'y a pas de paramètre superflu ; rapide : la qualité des alignements produits ne dépend pas du temps d'exécution. C'est la couverture du texte d'origine par les alignements qui augmente en fonction du temps. L'uti lisateur peut à tout moment interrompre le traitement et récolter tous les alignements  obtenus jusqu'alors. En pratique, quelques secondes suffisent à extraire les alignements les plus fréquents à partir de textes de plusieurs centaines de milliers de phrases ; facilement parallélisable : plusieurs processus peuvent être lancés simultanément, sur plusieurs machines par exemple. Les sorties de chacun peuvent être fusionnées sans difficulté aucune ; facilement intégrable : les formats d'entrée et de sortie sont de simples fichiers textes, aisément réutilisables dans tout environnement (par exemple un pipeline Unix ou une plateforme de traitement linguistique). D'autres formats sont disponibles, tels que des sorties directement compatibles avec le décodeur statistique Moses, H , ou encore le format professionnel de mémoire de traduction, T de L ; complet : contrairement à un aligneur qui établit des liens entre les mots sources et cibles d'un couple de phrases traductions l'une de l'autre, anymalign produit directement des tables de traduction constituées d'alignements (suites de mots connexes ou non) et de leurs scores associés : actuellement fréquence, probabilités de traduction et poids lexicaux ; portable : le programme est écrit dans le langage de programmation Python, disponible sur la plupart des systèmes d'exploitation (actuellement la version 2.4 suffit). Il ne nécessite aucun module externe : seule la bibliothèque standard est utilisée. Il est constitué d'un unique fichier exécutable : aucune installation n'est nécessaire.  La méthode d'alignement originale a été décrite dans (Lardilleux & Lepage, 2008). Les étapes  sont les suivantes : 1. transformer le corpus d'entrée multilingue en un corpus alingue, c'est-à-dire supprimer les limites entre langues après discrimination des formes surfaciques des mots selon leur langue d'origine. Sur le corpus trilingue français-anglais-arabe ci-dessous, cette discrimination a été faite par indiçage sur les langues (voir en particulier les points de fin de phrases) ; 2. extraire un sous-corpus par échantillonnage. En pratique, des sous-corpus de petite taille sont privilégiés car ils fournissent de meilleurs résultats (Lardilleux & Lepage, 2008), comme le sous-corpus suivant : 1 Un café , s'il vous plaît . One coffee , please . 2 Ce café est excellent . This coffee is excellent . 3 Un thé fort . One strong tea . 3. regrouper les mots de ce sous-corpus en fonction des lignes sur lesquelles ils apparaissent : les mots d'un même groupe apparaissent strictement sur les mêmes lignes (l'ordre des mots importe peu) : Les mots : apparaissent sur les lignes : 1 Un One 1 3 2 café coffee 1 2 3 , s'il vous plaît , please 1 4 . . 1 2 3 5 Ce est excellent This is excellent 2 6 thé fort strong tea 3  4. pour chaque groupe, relire les lignes du sous-corpus où ce groupe apparaît, et en extraire  deux alignements : (a) la séquence ordonnée constituée des mots du groupe ; (b) la séquence complémentaire de cette séquence ordonnée également. Par exemple, le groupe 2 permet d'extraire la séquence ordonnée « café coffee » et son complémentaire « Un _ , s'il vous plaît . One _ , please . » de la ligne 1. Il permet aussi d'extraire « café coffee » et son nouveau complémentaire « Ce _ est excellent . This _ is excellent . _ » de la ligne 3. Chaque groupe est donc susceptible de produire deux alignements par ligne ; 5. répéter les étapes 2 à 4 tant que de nouveaux alignements sont produits, ou jusqu'à ce que l'utilisateur interrompe le processus. Le nombre de fois que chaque alignement a été obtenu permet de déduire les probabilités de traduction associées. Des poids lexicaux peuvent également être calculés à partir des cooccurrences de mots dans le corpus initial.  Le programme implémentant la méthode décrite ci-dessus est téléchargeable à l'adresse :  http://users.info.unicaen.fr/~alardill/anymalign/ Il permet de traiter des quantités de données considérables tout en minimisant les ressources nécessaires. Étant donné un corpus multilingue disponible dans des fichiers séparés avec une phrase par ligne, la simple commande : python anymalign.py langue1.txt langue2.txt [...] suffit pour obtenir une table de traduction. La figure 1 donne un exemple de résultat en H .  
